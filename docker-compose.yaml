version: "2.1"

services:
  product:
    build: microservices/product-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  recommendation:
    build: microservices/recommendation-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  review:
    build: microservices/review-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mariadb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  product-composite:
    build: microservices/product-composite-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy

  mongodb:
    image: mongo:4.0.10
    mem_limit: 350m
    ports:
      - "27017:27017"
    command: ["mongod", "--smallfiles"]
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 10s
      timeout: 5s
      retries: 10

  mariadb:
    image: mariadb:10.5
    mem_limit: 450m
    ports:
      - "3306:3306"
    environment:
      - MARIADB_ROOT_PASSWORD=rootpwd
      - MARIADB_DATABASE=review-db
      - MARIADB_USER=user
      - MARIADB_PASSWORD=pwd
    healthcheck:
      test: ["CMD", "mysqladmin", "--user=user", "--password=pwd", "-h", "localhost", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.7.8-management
    mem_limit: 350m
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
